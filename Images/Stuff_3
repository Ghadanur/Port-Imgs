'use client'
import React, { useRef, useEffect, useLayoutEffect } from 'react';
import { motion, AnimatePresence, useScroll, useTransform, useMotionValue, useSpring } from 'framer-motion';
import { Home, Phone, Sparkles, Mountain, Sun, X } from 'lucide-react';
import { cn } from "@/lib/utils";
import CosmicJourney from '@/components/cosmic-journey';
import { gsap } from 'gsap';
import { ScrollTrigger } from 'gsap/ScrollTrigger';
import { ScrollSmoother } from 'gsap/ScrollSmoother';


type Theme = 'theme-nebula' | 'theme-carina-nebula' | 'theme-solar-system';

const themes: { name: Theme, icon: React.FC<any> }[] = [
    { name: 'theme-nebula', icon: Sparkles },
    { name: 'theme-carina-nebula', icon: Mountain },
    { name: 'theme-solar-system', icon: Sun },
];

const ThemeSwitcher = ({ activeTheme, setTheme }: { activeTheme: Theme, setTheme: (theme: Theme) => void }) => {
    return (
        <div className="fixed top-4 right-4 z-50 flex gap-2">
            {themes.map((theme) => (
                <button
                    key={theme.name}
                    onClick={() => setTheme(theme.name)}
                    className={`p-2 rounded-full transition-all duration-300 ${
                        activeTheme === theme.name 
                            ? 'bg-white/30 text-teal-300 scale-110' 
                            : 'bg-black/20 text-white/70 hover:bg-white/20'
                    }`}
                    aria-label={`Switch to ${theme.name} theme`}
                >
                    <theme.icon className="w-5 h-5" />
                </button>
            ))}
        </div>
    );
};


const sections = {
  home: { title: 'Home', icon: '✨' },
  about: { title: 'About', icon: '🎓' },
  experience: { title: 'Experience', icon: '🚀' },
  projects: { title: 'Projects', icon: '💡' },
  volunteering: { title: 'Volunteering', icon: '🤝' },
  contact: { title: 'Contact', icon: '📧' },
};

const SectionHeader = ({ title, onHomeClick, onContactClick }: { title: string, onHomeClick: () => void, onContactClick: () => void }) => (
    <motion.div 
        className="flex items-center justify-between mb-12 relative w-full"
        initial={{ opacity: 0, y: 50 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true, amount: 0.3 }}
        transition={{ duration: 0.6 }}
    >
        <button 
            onClick={onHomeClick} 
            className="group flex items-center gap-2 text-white hover:text-teal-400 transition-all duration-300"
        >
            <Home className="w-6 h-6 transition-transform duration-300 md:group-hover:scale-125 md:group-hover:drop-shadow-[0_0_5px_#14b8a6]" />
            <span className="section-header-nav-label opacity-0 md:group-hover:opacity-100 transition-opacity duration-300 md:-translate-x-4 md:group-hover:translate-x-0">Home</span>
        </button>
        
        <h2 className="text-3xl font-bold text-center mx-4" style={{
            background: 'linear-gradient(135deg, #ffffff, #14b8a6)',
            WebkitBackgroundClip: 'text',
            backgroundClip: 'text',
            WebkitTextFillColor: 'transparent'
        }}>
            {title}
        </h2>
        
        <button 
            onClick={onContactClick} 
            className="group flex items-center gap-2 text-white hover:text-yellow-400 transition-all duration-300"
        >
            <span className="section-header-nav-label opacity-0 md:group-hover:opacity-100 transition-opacity duration-300 md:translate-x-4 md:group-hover:translate-x-0">Contact</span>
            <Phone className="w-6 h-6 transition-transform duration-300 md:group-hover:scale-125 md:group-hover:drop-shadow-[0_0_5px_#cd7f32]" />
        </button>
    </motion.div>
);

const heroTitles = [
    "Electronics Engineer",
    "Robotics Enthusiast",
    "Innovation Driver",
    "✨ Stargazer"
];

const DynamicHeroText = () => {
    const [index, setIndex] = React.useState(0);

    React.useEffect(() => {
        const intervalId = setInterval(() => {
            setIndex((prevIndex) => (prevIndex + 1) % heroTitles.length);
        }, 2000); // Changes every 2 seconds

        return () => clearInterval(intervalId);
    }, []);

    return (
        <div className="inline-block">
            <AnimatePresence mode="wait">
                <motion.span
                    key={heroTitles[index]}
                    initial={{ opacity: 0, y: -20 }}
                    animate={{ opacity: 1, y: 0 }}
                    exit={{ opacity: 0, y: 20 }}
                    transition={{ duration: 0.5 }}
                    className="hero-p stylish-hero-p"
                >
                    {heroTitles[index]}
                </motion.span>
            </AnimatePresence>
        </div>
    );
};

const aboutData = {
    academic: {
        title: 'Academic Excellence',
        points: [
            'Strong foundation in Electronics Engineering',
            'Consistent high academic performance',
            'Deep understanding of embedded systems',
            'Advanced coursework in AI and machine learning',
        ],
    },
    innovation: {
        title: 'Innovation & Problem Solving',
        points: [
            'Recognized as a Galactic Problem Solver in NASA Challenge',
            '2nd Position in Capture the Science competition',
            'Runner up in CapTech innovation challenge',
            'Creative approach to complex engineering problems',
        ],
    },
    robotics: {
        title: 'Hands-On Robotics',
        points: [
            'Expert in IoT and AI integration',
            'Experience building autonomous systems',
            'Proficient in sensor integration and control systems',
            'Real-world application of theoretical knowledge',
        ],
    },
    sustainability: {
        title: 'Sustainability Focus',
        points: [
            'Passionate about environmental technology solutions',
            'Focus on creating sustainable engineering practices',
            'Green technology innovation mindset',
            'Balancing technological advancement with environmental responsibility',
        ],
    },
    photography: {
        title: 'Photography Passion',
        points: [
            'Obsessed with capturing unique perspectives',
            'Love exploring different angles and sceneries',
            'Creative eye that enhances engineering design thinking',
            'View my work on Flickr',
        ],
        link: 'https://www.flickr.com/photos/196616463@N02/',
    },
};

const starData = [
    { id: 'academic', label: 'Academics', style: { top: '30%', left: '20%', animationDelay: '0s' } },
    { id: 'innovation', label: 'Innovation', style: { top: '55%', left: '35%', animationDelay: '1s' } },
    { id: 'robotics', label: 'Robotics', style: { top: '30%', left: '50%', animationDelay: '0.5s' } },
    { id: 'sustainability', label: 'Sustainability', style: { top: '55%', left: '65%', animationDelay: '1.5s' } },
    { id: 'photography', label: 'Photography', style: { top: '30%', left: '80%', animationDelay: '2s' } },
];

const DescriptionConstellation = ({ data, handleClose, dragConstraintsRef }: { data: { title: string, points: string[], link?: string }, handleClose: () => void, dragConstraintsRef: React.RefObject<HTMLDivElement> }) => {
    const cardVariants = {
        hidden: { opacity: 0, scale: 0.8, transition: { duration: 0.4 } },
        visible: { opacity: 1, scale: 1, transition: { duration: 0.4, ease: 'easeOut' } },
        exit: { opacity: 0, scale: 0.8, transition: { duration: 0.3, ease: 'easeIn' } },
    };
    
    return (
        <motion.div
            className="hologram-container"
            variants={cardVariants}
            initial="hidden"
            animate="visible"
            exit="exit"
            drag
            dragConstraints={dragConstraintsRef}
            dragElastic={0.1}
            dragTransition={{ bounceStiffness: 200, bounceDamping: 20 }}
            onClick={(e) => e.stopPropagation()}
        >
            <div className="hologram-projection">
                 <h3>{data.title}</h3>
                 <ul>
                     {data.points.map((point, pIndex) => (
                         <li key={pIndex}>
                             {data.link && pIndex === data.points.length - 1 ? (
                                 <a href={data.link} target="_blank" rel="noopener noreferrer" className="text-teal-300 hover:text-teal-100 underline">
                                     {point}
                                 </a>
                             ) : (
                                 point
                             )}
                         </li>
                     ))}
                 </ul>
            </div>
            <div className="hologram-puck"></div>
            <button onClick={handleClose} className="close-btn z-[60]">&times;</button>
        </motion.div>
    );
};

const ParticleBurst = ({ count = 20, onComplete, ...props }) => {
    return (
        <div {...props}>
            {Array.from({ length: count }).map((_, i) => {
                const angle = (i / count) * 360;
                const distance = Math.random() * 100 + 50;
                return (
                    <motion.div
                        key={i}
                        className="particle-burst"
                        style={{
                            width: `${Math.random() * 5 + 2}px`,
                            height: `${Math.random() * 5 + 2}px`,
                        }}
                        initial={{ scale: 0, x: 0, y: 0 }}
                        animate={{
                            x: Math.cos(angle * (Math.PI / 180)) * distance,
                            y: Math.sin(angle * (Math.PI / 180)) * distance,
                            scale: 1,
                            opacity: [1, 0.5, 0],
                        }}
                        transition={{
                            duration: 0.6,
                            ease: 'easeOut',
                            delay: Math.random() * 0.2,
                        }}
                        onAnimationComplete={i === 0 ? onComplete : undefined}
                    />
                );
            })}
        </div>
    );
};


const SaturnAbout = () => {
    const [activePanel, setActivePanel] = React.useState<string | null>(null);
    const [burstPosition, setBurstPosition] = React.useState<{ top: number, left: number } | null>(null);
    const [isBursting, setIsBursting] = React.useState(false);
    const [isPanelVisible, setIsPanelVisible] = React.useState(false);
    const dragConstraintsRef = useRef(null);

    const handleStarClick = (id: string, event: React.MouseEvent) => {
        const rect = event.currentTarget.getBoundingClientRect();
        setBurstPosition({
            top: rect.top + window.scrollY + rect.height / 2,
            left: rect.left + window.scrollX + rect.width / 2,
        });
        setActivePanel(id);
        setIsBursting(true); 
    };

    const handleClose = () => {
        setIsPanelVisible(false);
    };
    
    React.useEffect(() => {
        if (isBursting) {
            const timer = setTimeout(() => {
                setIsPanelVisible(true);
            }, 300); // Delay panel appearance until burst animation is partway through
            return () => clearTimeout(timer);
        }
    }, [isBursting]);

    React.useEffect(() => {
        const handleEsc = (event: KeyboardEvent) => {
           if (event.key === 'Escape') {
              handleClose();
           }
        };
        window.addEventListener('keydown', handleEsc);

        return () => {
            window.removeEventListener('keydown', handleEsc);
        };
    }, []);

    return (
        <motion.div 
            className="about-constellation-container"
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true, amount: 0.3 }}
            transition={{ duration: 0.6, delay: 0.2 }}
            ref={dragConstraintsRef}
        >
            <div className="relative w-full" style={{paddingTop: '60%'}}>
            {starData.map((star) => (
                <div
                    id={`star-container-${star.id}`}
                    key={star.id}
                    data-star-id={star.id}
                    className={`about-star-container ${activePanel === star.id && isPanelVisible ? 'active' : ''}`}
                    style={star.style as React.CSSProperties}
                    onClick={(e) => handleStarClick(star.id, e)}
                >
                    <div className="about-star"></div>
                    <span className="about-star-label">{star.label}</span>
                </div>
            ))}
            </div>

            <AnimatePresence>
                {isBursting && burstPosition && (
                     <ParticleBurst
                        style={{ position: 'fixed', top: burstPosition.top, left: burstPosition.left, transform: 'translate(-50%, -50%)' }}
                        onComplete={() => setIsBursting(false)}
                    />
                )}
            </AnimatePresence>

            <AnimatePresence onExitComplete={() => setActivePanel(null)}>
                {activePanel && isPanelVisible && (
                    <motion.div
                        className="overlay"
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        exit={{ opacity: 0 }}
                        onClick={handleClose}
                    >
                        <DescriptionConstellation
                            data={aboutData[activePanel as keyof typeof aboutData]}
                            handleClose={handleClose}
                            dragConstraintsRef={dragConstraintsRef}
                        />
                    </motion.div>
                )}
            </AnimatePresence>
        </motion.div>
    );
};


const PageContent = () => {
    const scrollToSection = (sectionId: string) => {
        const section = document.getElementById(sectionId);
        if (section) {
          section.scrollIntoView({ behavior: 'smooth' });
        }
    };
    const numStars = Object.keys(sections).length;
    const radius = 40; // a percentage
    const starPositions = Array.from({ length: numStars }).map((_, index) => {
        const angle = (index / numStars) * 2 * Math.PI - Math.PI / 2; // Start from top
        const left = 50 + radius * Math.cos(angle);
        const top = 50 + radius * Math.sin(angle);
        return { top: `${top}%`, left: `${left}%` };
    });

    return (
         <>
             <section id="home" className="section flex h-screen flex-col items-center justify-center pt-20">
                <div className="w-full max-w-4xl text-center">
                  <h1 className="hero-h1 stylish-hero-h1 font-display">Ghada Noor</h1>
                  <div className="h-8">
                    <DynamicHeroText />
                  </div>
                  <p className="hero-p stylish-hero-p-secondary">Passionate about creating technology-driven solutions while contemplating the cosmos</p>
                  
                  <div className="constellation-nav relative mx-auto my-12 flex items-center justify-center" style={{ width: 'clamp(18rem, 80vw, 24rem)', height: 'clamp(18rem, 80vw, 24rem)' }}>
                    {Object.keys(sections).map((key, index) => (
                      <button
                        key={key}
                        onClick={() => scrollToSection(key)}
                        className="star-nav-item absolute -translate-x-1/2 -translate-y-1/2 transform"
                        style={starPositions[index]}
                      >
                        <div className="star-nav-point"></div>
                        <span className="star-nav-label">{sections[key as keyof typeof sections].title}</span>
                      </button>
                    ))}
                     <p className="constellation-prompt text-center w-3/4">Click a star to explore a section</p>
                  </div>
                </div>
            </section>
    
            <section className="section w-full" id="about">
                <div className="container">
                    <SectionHeader title="About Me" onHomeClick={() => scrollToSection('home')} onContactClick={() => scrollToSection('contact')} />
                    <SaturnAbout />
                </div>
            </section>
    
            <section className="w-full" id="experience">
                <CosmicJourney />
            </section>
    
            <section className="section w-full" id="projects">
                <div className="container">
                    <SectionHeader title="Featured Projects" onHomeClick={() => scrollToSection('home')} onContactClick={() => scrollToSection('contact')} />
                    <div className="projects-grid">
                        <motion.div 
                            className="project-card"
                            initial={{ opacity: 0, y: 50 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true, amount: 0.3 }}
                            transition={{ duration: 0.6, delay: 0.1 }}
                        >
                            <img src="https://raw.githubusercontent.com/Ghadanur/Port-Imgs/7cb9eeed517c40defbd11c4e48f139eeb097d729/Images/Portable_Q_A.jpg" alt="Air Quality Monitoring System" className="rounded-t-lg project-image" data-ai-hint="air quality" />
                            <div className="p-6">
                                <h3>Air Quality Monitoring System</h3>
                                <p>Final Year Design Project featuring GSM integration for real-time data transmission, sensor calibration, and comprehensive web/mobile dashboard development for environmental monitoring.</p>
                            </div>
                        </motion.div>
                        
                        <motion.div 
                             className="project-card"
                             initial={{ opacity: 0, y: 50 }}
                             whileInView={{ opacity: 1, y: 0 }}
                             viewport={{ once: true, amount: 0.3 }}
                             transition={{ duration: 0.6, delay: 0.2 }}
                        >
                            <img src="https://raw.githubusercontent.com/Ghadanur/Port-Imgs/3f9df5f9733cc851bffb0d8213a12f426a9ff2a4/Images/Diff_Rover.jpg" alt="Differential Drive Robot" className="rounded-t-lg project-image" data-ai-hint="robot rover" />
                            <div className="p-6">
                                <h3>Differential Drive Robot</h3>
                                <p>Designed and simulated an autonomous rover using ROS framework with advanced visualization in RViz and Gazebo simulation environments.</p>
                            </div>
                        </motion.div>
                        
                        <motion.div 
                             className="project-card"
                             initial={{ opacity: 0, y: 50 }}
                             whileInView={{ opacity: 1, y: 0 }}
                             viewport={{ once: true, amount: 0.3 }}
                             transition={{ duration: 0.6, delay: 0.3 }}
                        >
                            <img src="https://raw.githubusercontent.com/Ghadanur/Port-Imgs/a6e24e31aabab87809cf86af9dc97c9ec1dcb44a/Images/SR_ARQ.jpg" alt="ARQ Protocol Implementation" className="rounded-t-lg project-image" data-ai-hint="network protocol" />
                            <div className="p-6">
                                <h3>ARQ Protocol Implementation</h3>
                                <p>Developed Selective Repeat Sliding Window ARQ mechanism using OMNeT++ with custom MAC layer protocol and traffic generation capabilities.</p>
                            </div>
                        </motion.div>
                        
                        <motion.div 
                             className="project-card"
                             initial={{ opacity: 0, y: 50 }}
                             whileInView={{ opacity: 1, y: 0 }}
                             viewport={{ once: true, amount: 0.3 }}
                             transition={{ duration: 0.6, delay: 0.1 }}
                        >
                            <img src="https://raw.githubusercontent.com/Ghadanur/Port-Imgs/a7687e230649e4bb2d3a529de1dacf2c37b7aeb5/Images/Temp_dry_PLC_Logic.jpg" alt="PLC Temperature Control" className="rounded-t-lg project-image" data-ai-hint="industrial temperature" />
                            <div className="p-6">
                                <h3>PLC Temperature Control</h3>
                                <p>Industrial automation system using Siemens PLC and ladder logic for precise temperature regulation with integrated sensors and actuators.</p>
                            </div>
                        </motion.div>
                        
                        <motion.div 
                             className="project-card"
                             initial={{ opacity: 0, y: 50 }}
                             whileInView={{ opacity: 1, y: 0 }}
                             viewport={{ once: true, amount: 0.3 }}
                             transition={{ duration: 0.6, delay: 0.2 }}
                        >
                            <img src="https://raw.githubusercontent.com/Ghadanur/Port-Imgs/500cc74a0ad99b0f5fc23adc9a071099cd5bc4a4/Images/imag_class_project.jpg" alt="AI Image Classifier" className="rounded-t-lg project-image" data-ai-hint="ai flower" />
                            <div className="p-6">
                                <h3>AI Image Classifier</h3>
                                <p>Command-line application implementing neural networks trained on the 102 Category Flower Dataset for accurate image classification.</p>
                            </div>
                        </motion.div>
                        
                        <motion.div 
                             className="project-card"
                             initial={{ opacity: 0, y: 50 }}
                             whileInView={{ opacity: 1, y: 0 }}
                             viewport={{ once: true, amount: 0.3 }}
                             transition={{ duration: 0.6, delay: 0.3 }}
                        >
                            <img src="https://raw.githubusercontent.com/Ghadanur/Port-Imgs/711c9591667a68ce3c35787ef6dc060a61e018fe/Images/Smart%20Parking%20Sensor.jpg?raw=true" alt="Smart Parking System" className="rounded-t-lg project-image" data-ai-hint="smart parking" />
                            <div className="p-6">
                                <h3>Smart Parking System</h3>
                                <p>IoT-based solution using Node MCU and ultrasonic sensors for real-time parking space monitoring and wireless data transmission.</p>
                            </div>
                        </motion.div>
                    </div>
                </div>
            </section>
    
            <section className="section w-full" id="volunteering">
                <div className="container">
                    <SectionHeader title="Volunteering" onHomeClick={() => scrollToSection('home')} onContactClick={() => scrollToSection('contact')} />
                    <div className="experience-timeline">
                        <motion.div 
                            className="timeline-item"
                            initial={{ opacity: 0, y: 50 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true, amount: 0.3 }}
                            transition={{ duration: 0.6, delay: 0.1 }}
                        >
                            <p className="timeline-date">Social Services</p>
                            <h3 className="timeline-title">Student Volunteer - Dar ul Sukun</h3>
                        </motion.div>
                        <motion.div 
                            className="timeline-item"
                            initial={{ opacity: 0, y: 50 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true, amount: 0.3 }}
                            transition={{ duration: 0.6, delay: 0.2 }}
                        >
                            <p className="timeline-date">Dec 2022</p>
                            <h3 className="timeline-title">Student Volunteer - 3rd Int'l Conference of Innovation in CS & SE</h3>
                            <p>Science and Technology</p>
                        </motion.div>
                         <motion.div 
                            className="timeline-item"
                            initial={{ opacity: 0, y: 50 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true, amount: 0.3 }}
                            transition={{ duration: 0.6, delay: 0.3 }}
                         >
                            <h3 className="timeline-title">Social Media Ambassador - IEEE SB Envision '22</h3>
                            <p>Technology Event in 2022 At NED University</p>
                        </motion.div>
                         <motion.div 
                            className="timeline-item"
                            initial={{ opacity: 0, y: 50 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true, amount: 0.3 }}
                             transition={{ duration: 0.6, delay: 0.1 }}
                         >
                            <p className="timeline-date">Dec 2021 - Mar 2022</p>
                            <h3 className="timeline-title">Active Team member - NED Entrepreneurship Society</h3>
                             <p>Science and Technology</p>
                        </motion.div>
                        <motion.div 
                            className="timeline-item"
                            initial={{ opacity: 0, y: 50 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true, amount: 0.3 }}
                            transition={{ duration: 0.6, delay: 0.2 }}
                        >
                            <p className="timeline-date">Dec 2021 - Nov 2023</p>
                            <h3 className="timeline-title">Active Team Member - IEEE NEDUET Student Branch</h3>
                            <p>Economic Empowerment</p>
                        </motion.div>
                    </div>
                </div>
            </section>
    
            <section className="section w-full" id="contact">
                <div className="container">
                    <SectionHeader title="Let's Connect" onHomeClick={() => scrollToSection('home')} onContactClick={() => scrollToSection('contact')} />
                    <motion.div 
                        style={{textAlign: 'center', maxWidth: '800px', margin: '0 auto 40px'}}
                        initial={{ opacity: 0, y: 50 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        viewport={{ once: true, amount: 0.3 }}
                        transition={{ duration: 0.6 }}
                    >
                        <p style={{fontSize: '1.1rem', lineHeight: 1.8, opacity: 0.9}}>
                          I'm always excited to connect with fellow innovators, creators, and problem-solvers. Whether you have a project in mind, a question about my work, or just want to say hello, please don't hesitate to reach out.
                        </p>
                    </motion.div>
                    <div className="contact-info">
                        <motion.div 
                            className="contact-card"
                            initial={{ opacity: 0, y: 50 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true, amount: 0.3 }}
                            transition={{ duration: 0.6, delay: 0.1 }}
                        >
                            <div className="contact-icon">📧</div>
                            <h4>Email</h4>
                            <p>ghadanoor.el@gmail.com</p>
                        </motion.div>
                        
                        <motion.div 
                            className="contact-card"
                            initial={{ opacity: 0, y: 50 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true, amount: 0.3 }}
                            transition={{ duration: 0.6, delay: 0.2 }}
                        >
                            <div className="contact-icon">📱</div>
                            <h4>Phone</h4>
                            <p>+92-334-0273197</p>
                        </motion.div>
                        
                        <motion.div 
                            className="contact-card"
                            initial={{ opacity: 0, y: 50 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true, amount: 0.3 }}
                            transition={{ duration: 0.6, delay: 0.3 }}
                        >
                            <div className="contact-icon">📍</div>
                            <h4>Location</h4>
                            <p>Karachi, Pakistan</p>
                        </motion.div>
                        
                        <motion.a 
                            href="https://www.linkedin.com/in/ghada-noor-141aa4228" target="_blank" rel="noopener noreferrer" style={{textDecoration: 'none', color: 'inherit'}}
                             initial={{ opacity: 0, y: 50 }}
                             whileInView={{ opacity: 1, y: 0 }}
                             viewport={{ once: true, amount: 0.3 }}
                             transition={{ duration: 0.6, delay: 0.1 }}
                        >
                          <div className="contact-card">
                              <div className="contact-icon">💼</div>
                              <h4>LinkedIn</h4>
                              <p>Professional Profile</p>
                          </div>
                        </motion.a>
    
                        <motion.a 
                            href="https://www.flickr.com/photos/196616463@N02/" target="_blank" rel="noopener noreferrer" style={{textDecoration: 'none', color: 'inherit'}}
                             initial={{ opacity: 0, y: 50 }}
                             whileInView={{ opacity: 1, y: 0 }}
                             viewport={{ once: true, amount: 0.3 }}
                             transition={{ duration: 0.6, delay: 0.2 }}
                        >
                          <div className="contact-card">
                              <div className="contact-icon">📷</div>
                              <h4>Flickr</h4>
                              <p>My Photography</p>
                          </div>
                        </motion.a>
    
                        <motion.a 
                            href="https://github.com/Ghadanur" target="_blank" rel="noopener noreferrer" style={{textDecoration: 'none', color: 'inherit'}}
                             initial={{ opacity: 0, y: 50 }}
                             whileInView={{ opacity: 1, y: 0 }}
                             viewport={{ once: true, amount: 0.3 }}
                             transition={{ duration: 0.6, delay: 0.3 }}
                        >
                          <div className="contact-card">
                              <div className="contact-icon">💻</div>
                              <h4>GitHub</h4>
                              <p>My Projects</p>                          </div>
                        </motion.a>
                    </div>
                </div>
            </section>
        </>
    );
};

export default function PortfolioPage() {
    const [activeTheme, setActiveTheme] = React.useState<Theme>('theme-nebula');
    
    const handleSetTheme = (theme: Theme) => {
        document.body.classList.remove('theme-nebula', 'theme-carina-nebula', 'theme-solar-system');
        document.body.classList.add(theme);
        setActiveTheme(theme);
    };

    useLayoutEffect(() => {
        gsap.registerPlugin(ScrollTrigger, ScrollSmoother);

        const smoother = ScrollSmoother.create({
            wrapper: '#smooth-wrapper',
            content: '#smooth-content',
            smooth: 1.5,
            effects: true,
        });

        return () => {
            smoother.kill();
        };
    }, []);

    useEffect(() => {
        // Enhanced stargazer particles animation
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            if (!particlesContainer) return;

            // Clear existing particles
            while(particlesContainer.firstChild) {
                particlesContainer.removeChild(particlesContainer.firstChild);
            }

            const particleCount = 30;
            
            // Create twinkling stars
            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                
                const size = Math.random() * 3 + 1;
                particle.style.width = size + 'px';
                particle.style.height = size + 'px';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.top = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 6 + 's';
                particle.style.animationDuration = (Math.random() * 4 + 4) + 's';
                
                particlesContainer.appendChild(particle);
            }

            // Create shooting stars
            for (let i = 0; i < 3; i++) {
                const shootingStar = document.createElement('div');
                shootingStar.className = 'shooting-star';
                shootingStar.style.left = Math.random() * 100 + '%';
                shootingStar.style.top = Math.random() * 50 + '%';
                shootingStar.style.animationDelay = Math.random() * 10 + 's';
                shootingStar.style.animationDuration = (Math.random() * 3 + 2) + 's';
                particlesContainer.appendChild(shootingStar);
            }

            // Create constellations
            createConstellation(particlesContainer, 20, 20, 'orion');
            createConstellation(particlesContainer, 70, 30, 'cassiopeia');
            createConstellation(particlesContainer, 80, 70, 'ursa');

            // Create nebula effects
            const existingNebulas = document.querySelectorAll('.nebula');
            existingNebulas.forEach(n => n.remove());
            for (let i = 0; i < 2; i++) {
                const nebula = document.createElement('div');
                nebula.className = 'nebula';
                nebula.style.left = Math.random() * 100 + '%';
                nebula.style.top = Math.random() * 100 + '%';
                nebula.style.animationDelay = i * 10 + 's';
                document.body.appendChild(nebula);
            }
        }

        function createConstellation(container: HTMLElement, x: number, y: number, type: string) {
            if (!container) return;
            const constellation = document.createElement('div');
            constellation.className = 'constellation';
            constellation.style.left = x + '%';
            constellation.style.top = y + '%';

            // Define constellation patterns
            const patterns: { [key: string]: {x: number, y: number}[] } = {
                orion: [
                    {x: 10, y: 10}, {x: 30, y: 5}, {x: 50, y: 15},
                    {x: 20, y: 35}, {x: 40, y: 30}, {x: 60, y: 40},
                    {x: 25, y: 55}, {x: 45, y: 50}, {x: 65, y: 60}
                ],
                cassiopeia: [
                    {x: 10, y: 30}, {x: 25, y: 10}, {x: 40, y: 20},
                    {x: 55, y: 5}, {x: 70, y: 25}
                ],
                ursa: [
                    {x: 10, y: 20}, {x: 25, y: 15}, {x: 40, y: 10},
                    {x: 55, y: 20}, {x: 45, y: 35}, {x: 30, y: 40},
                    {x: 15, y: 35}
                ]
            };

            const starPattern = patterns[type];
            if (!starPattern) return;
            
            // Create stars
            starPattern.forEach((pos, index) => {
                const star = document.createElement('div');
                star.className = 'constellation-star';
                star.style.left = pos.x + '%';
                star.style.top = pos.y + '%';
                star.style.animationDelay = index * 0.2 + 's';
                constellation.appendChild(star);
            });

            // Create connecting lines
            for (let i = 0; i < starPattern.length - 1; i++) {
                const line = document.createElement('div');
                line.className = 'constellation-line';
                const start = starPattern[i];
                const end = starPattern[i + 1];
                
                const length = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2));
                const angle = Math.atan2(end.y - start.y, end.x - start.x) * 180 / Math.PI;
                
                line.style.left = start.x + '%';
                line.style.top = start.y + '%';
                line.style.width = length + '%';
                line.style.transform = `rotate(${angle}deg)`;
                line.style.animationDelay = i * 0.5 + 's';
                
                constellation.appendChild(line);
            }

            container.appendChild(constellation);
        }
        
        // Initialize all features
        createParticles();
        
        const intervalId = setInterval(() => {
          const tags = document.querySelectorAll('.tag');
          tags.forEach(tag => {
              if (Math.random() > 0.95) {
                  (tag as HTMLElement).style.background = 'linear-gradient(135deg, #cd7f32, #14b8a6)';
                  setTimeout(() => {
                      (tag as HTMLElement).style.background = 'linear-gradient(135deg, #14b8a6, #0d9488)';
                  }, 1000);
              }
          });
        }, 3000);

        return () => {
            clearInterval(intervalId);
        };

    }, []);

    return (
        <div id="smooth-wrapper">
            <div id="smooth-content">
                <ThemeSwitcher activeTheme={activeTheme} setTheme={handleSetTheme} />
                <div className="floating-particles" id="particles"></div>
                
                <main className="container relative z-10 mx-auto">
                    <PageContent />
                </main>

                <footer className="footer">
                    <div className="container">
                        <p>&copy; 2025 Ghada Noor. Crafted with passion for innovation and sustainability.</p>
                    </div>
                </footer>
            </div>
        </div>
    );
}
